#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ GitHub
"""

import os
import subprocess
import sys

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å –≤—ã–≤–æ–¥–æ–º"""
    print(f"üîÑ {description}...")
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ")
            if result.stdout:
                print(result.stdout)
        else:
            print(f"‚ùå {description} - –æ—à–∏–±–∫–∞:")
            print(result.stderr)
            return False
        return True
    except Exception as e:
        print(f"‚ùå {description} - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def check_git_installed():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Git"""
    return run_command("git --version", "–ü—Ä–æ–≤–µ—Ä–∫–∞ Git")

def init_git_repository():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"""
    commands = [
        ("git init", "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"),
        ("git add .", "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ –∏–Ω–¥–µ–∫—Å"),
        ("git commit -m \"Initial commit: Telegram Bot CRM System\"", "–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞")
    ]
    
    for command, description in commands:
        if not run_command(command, description):
            return False
    return True

def setup_remote_repository():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"""
    print("\nüåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è")
    print("=" * 50)
    
    # –ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
    username = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è GitHub: ")
    repo_name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: telegram-bot-crm): ") or "telegram-bot-crm"
    
    remote_url = f"https://github.com/{username}/{repo_name}.git"
    
    print(f"\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏:")
    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}")
    print(f"   –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {repo_name}")
    print(f"   URL: {remote_url}")
    
    confirm = input("\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ").lower()
    if confirm != 'y':
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return False
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    commands = [
        (f"git remote add origin {remote_url}", "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"),
        ("git branch -M main", "–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –≤–µ—Ç–∫–∏ –≤ main"),
        ("git push -u origin main", "–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ –Ω–∞ GitHub")
    ]
    
    for command, description in commands:
        if not run_command(command, description):
            return False
    
    print(f"\nüéâ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ GitHub!")
    print(f"üì± –°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/{username}/{repo_name}")
    return True

def create_github_repository_instructions():
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–∞ GitHub"""
    print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–∞ GitHub:")
    print("=" * 50)
    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://github.com")
    print("2. –ù–∞–∂–º–∏—Ç–µ 'New repository'")
    print("3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É:")
    print("   - Repository name: telegram-bot-crm")
    print("   - Description: –ú–∏–Ω–∏ CRM —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è Telegram –±–æ—Ç–∞")
    print("   - Public –∏–ª–∏ Private (–Ω–∞ –≤–∞—à –≤—ã–±–æ—Ä)")
    print("   - ‚úÖ Add a README file")
    print("   - ‚úÖ Add .gitignore (Python)")
    print("   - ‚úÖ Choose a license (MIT)")
    print("4. –ù–∞–∂–º–∏—Ç–µ 'Create repository'")
    print("5. –í–µ—Ä–Ω–∏—Ç–µ—Å—å —Å—é–¥–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ GitHub")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
    if not check_git_installed():
        print("‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .gitignore
    if not os.path.exists('.gitignore'):
        print("‚ùå –§–∞–π–ª .gitignore –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π.")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    sensitive_files = ['.env', 'bot_database.db', 'config_local.py']
    for file in sensitive_files:
        if os.path.exists(file):
            print(f"‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: —Ñ–∞–π–ª {file} –±—É–¥–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –∑–∞–≥—Ä—É–∑–∫–∏ (.gitignore)")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    print("\nüìã –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–∞ GitHub")
    print("=" * 50)
    create_github_repository_instructions()
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–∞ GitHub...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git
    if not init_git_repository():
        print("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è")
        return False
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    if not setup_remote_repository():
        print("‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è")
        return False
    
    print("\nüéâ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub")
    print("2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ GitHub Secrets –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
    print("3. –°–æ–∑–¥–∞–π—Ç–µ Issues –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–¥–∞—á")
    print("4. –î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞")
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 